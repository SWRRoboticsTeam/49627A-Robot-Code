{"wrkspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">my variable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-10\" y=\"-10\"></block></xml>","rconfig":[{"port":[1,2,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","setting":{"wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","hasGyro":"false","width":"295","unit":"mm"}},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"split","id":"primary"}}],"slot":0,"cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"v5.h\"\n#include \"v5_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n// Robot configuration code.\nvex::motor LeftDriveSmart = vex::motor(vex::PORT1, vex::gearSetting::ratio18_1, false);\nvex::motor RightDriveSmart = vex::motor(vex::PORT2, vex::gearSetting::ratio18_1, true);\nvex::drivetrain Drivetrain = vex::drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 130, distanceUnits::mm, 1);\ncontroller Controller1 = controller(vex::controllerType::primary);\n\n//Vision sensor index vars.\nint Vision1_objectIndex = 0;\n\nint Brain_precision, Controller1_precision;\n\n\n// Generated code.\n\n\n\n\n \n \n \n \n \n \nbool drivetrainL_Backend_Bool_Controller1 = true; \n bool drivetrainR_Backend_Bool_Controller1 = true;\n  int rc_auto_loop_callback_Controller1() {\n  while(true) {\n    int l_speed_for_d_train = Controller1.Axis3.position() + Controller1.Axis1.position();\n    int r_speed_for_d_train = Controller1.Axis3.position() - Controller1.Axis1.position();\nif (l_speed_for_d_train < 5 && l_speed_for_d_train > -5){\nif (drivetrainL_Backend_Bool_Controller1) { LeftDriveSmart.stop(); drivetrainL_Backend_Bool_Controller1 = false;\n}\n} else {drivetrainL_Backend_Bool_Controller1 = true;} if (r_speed_for_d_train < 5 && r_speed_for_d_train > -5){\nif (drivetrainR_Backend_Bool_Controller1) { RightDriveSmart.stop(); drivetrainR_Backend_Bool_Controller1 = false;\n}\n} else {drivetrainR_Backend_Bool_Controller1 = true;}     if (drivetrainL_Backend_Bool_Controller1){\nLeftDriveSmart.setVelocity(l_speed_for_d_train, vex::velocityUnits::pct);\n    LeftDriveSmart.spin(vex::directionType::fwd);\n}    if (drivetrainR_Backend_Bool_Controller1){\nRightDriveSmart.setVelocity(r_speed_for_d_train, vex::velocityUnits::pct);\n    RightDriveSmart.spin(vex::directionType::fwd);\n}\n                          task::sleep(20);\n  }\n  return 0;\n}\n\n\n\nfloat my_variable;\n\nint whenStarted1() {\nreturn 0;\n}\n\n\nint main() {\n\n\n  srand(vex::timer::system());\n\n  vex::task rc_auto_loop_task_Controller1(rc_auto_loop_callback_Controller1);\n\n\n  // pre event registration\n  // register event handlers\n\n  task::sleep(15);\n  // post event registration\n\n  // when started blocks...\n\n  whenStarted1();\n  return 0;\n}","cppStatus":"true","platform":"V5","sdkVersion":"20190805.09.00.00","appVersion":"1.0.1-344","fileFormat":"0.1.1","icon":""}